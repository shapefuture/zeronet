name: Main CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_OPTIONS: "--max-old-space-size=4096"
  VLM_ENDPOINT: ${{ secrets.VLM_ENDPOINT }}
  OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
  VLM_MODEL_NAME: ${{ secrets.VLM_MODEL_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build packages
        run: pnpm build
      - name: Lint & Typecheck
        run: pnpm lint
      - name: Test
        run: pnpm test
      - name: Bundle Analysis
        run: pnpm analyze || true
      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: apps/web-app/.next

  lighthouse:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - uses: actions/download-artifact@v4
        with:
          name: web-build
          path: .next
      - name: Lighthouse CI
        run: pnpm --filter web-app lhci:autorun

  visual_testing:
    needs: build
    runs-on: ubuntu-latest
    env:
      VLM_ENDPOINT: ${{ secrets.VLM_ENDPOINT }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      VLM_MODEL_NAME: ${{ secrets.VLM_MODEL_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - uses: actions/download-artifact@v4
        with:
          name: web-build
          path: .next
      - name: Capture Screenshots
        run: npx playwright test --grep @visual
      - name: Download Baseline
        run: gh artifact download -n screenshots-main -p ./screenshots/main || echo 'Baseline not found'
      - name: Visual Diff
        run: npx pixelmatch ./screenshots/main ./screenshots/pr ./reports/visual_diff.json --threshold 0.05
      - name: Summarize Visual Diff
        if: failure()
        run: |
          curl -XPOST "$VLM_ENDPOINT" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENROUTER_API_KEY" \
            -d '{"model":"'$VLM_MODEL_NAME'","prompt":"Summarize visual changes from ./reports/visual_diff.json"}' \
            > summary.txt
          gh pr comment ${{ github.event.pull_request.number }} -F summary.txt

  deploy:
    needs: [lighthouse, visual_testing]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - uses: actions/download-artifact@v4
        with:
          name: web-build
          path: .next
      - name: Deploy to Cloudflare
        run: pnpm --filter web-app deploy:cloudflare # replace with actual wrangler or deploy script
      - name: Health Check
        run: |
          # Replace below with the actual domain after deployment
          curl -sf ${DEPLOY_DOMAIN:-https://your-actual-domain.com/health} | grep -i OK