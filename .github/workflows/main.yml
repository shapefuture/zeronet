name: Main CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: npm test
      - name: Build
        run: npm run build
      - name: Bundle Analysis
        run: npm run analyze
      - name: Critical CSS Check
        run: node scripts/verify_critical_css.js
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/

  lighthouse:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  deploy:
    needs: [build, lighthouse]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist
      - name: Deploy to Edge
        run: |
          # Would use wrangler/Cloudflare API here
          echo "Deploying to edge network..."
      - name: Verify Deployment Health
        run: |
          curl -s https://your-app.example.com/health | grep "OK"
      - name: Monitor Latency Spike
        run: |
          # Run 30s of synthetic monitoring
          node scripts/monitor_deployment.js --duration=30 --threshold=200